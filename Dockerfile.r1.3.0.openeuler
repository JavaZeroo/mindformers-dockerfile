# base on ubuntu 22.04 arm
FROM openeuler-22.03-lts:latest

RUN chmod 777 /tmp \
  && buildDeps='gcc g++ make vim wget curl zip net-tools git openssh-server tcl patch flex autoconf automake libtool openssl-devel bzip2-devel libffi-devel sqlite-devel hostname' \
  && yum update -y \
  && yum groupinstall "Development Tools" -y \
  && yum install -y $buildDeps \
  && git config --global http.sslverify false \
  && echo "check_certificate = off" >> ~/.wgetrc 

RUN wget http://localhost:8000/Python-3.10.16.tgz && tar -xzf Python-3.10.16.tgz && cd Python-3.10.16 && ./configure --enable-optimizations --enable-loadable-sqlite-extensions && make -j128 && make install && python3.10 -V

RUN ln -s /usr/local/bin/python3.10 /usr/bin/python

RUN wget http://localhost:8000/get-pip.py && \
    python3.10 get-pip.py && \
    rm get-pip.py

# 确保 pip3.10 可执行文件可用，并链接到 pip3
RUN ln -s /usr/local/bin/pip3.10 /usr/bin/pip3

# download and install cann
WORKDIR /root/packages
ARG cann_toolkit='http://localhost:8000/Ascend-cann-toolkit_8.0.0_linux-aarch64.run'
ARG cann_kernels='http://localhost:8000/Ascend-cann-kernels-910b_8.0.0_linux-aarch64.run'

RUN ln -s /bin/pip3 /bin/pip
RUN wget -q ${cann_toolkit} -O cann-toolkit.run && chmod +x cann-toolkit.run && ./cann-toolkit.run --full --quiet && rm ./cann-toolkit.run
RUN wget -q ${cann_kernels} -O cann-kernels.run && chmod +x cann-kernels.run && ./cann-kernels.run --install --quiet && rm ./cann-kernels.run

RUN cat /root/.bashrc

# pip install process
RUN pip config set global.index-url https://mirrors.aliyun.com/pypi/simple \
  && export PIP_TRUSTED_HOST=mirrors.aliyun.com \
  && pip install sympy tensorboardX\
  && pip install /usr/local/Ascend/ascend-toolkit/latest/lib64/te-*-py3-none-any.whl \
  && pip install /usr/local/Ascend/ascend-toolkit/latest/lib64/hccl-*-py3-none-any.whl

RUN export no_proxy=localhost \
  && export PIP_TRUSTED_HOST=mirrors.aliyun.com \
  && pip install http://localhost:8000/mindspore-2.4.10-cp310-cp310-linux_aarch64.whl

WORKDIR /root
RUN git clone -b dev https://gitee.com/mindspore/mindformers.git \
  && cd mindformers \ 
  && export PIP_TRUSTED_HOST=mirrors.aliyun.com \ 
  && pip install -r requirements.txt

ARG LOCAL_ASCEND=/usr/local/Ascend
RUN echo "export GLOG_v=2" >> /root/.bashrc \
  && echo "export LD_LIBRARY_PATH=${LOCAL_ASCEND}/driver/lib64/common:${LOCAL_ASCEND}/driver/lib64/driver:${LD_LIBRARY_PATH}" >> /root/.bashrc \
  && echo "source ${LOCAL_ASCEND}/driver/bin/setenv.bash" >> /root/.bashrc \
  && echo "source ${LOCAL_ASCEND}/ascend-toolkit/set_env.sh" >> /root/.bashrc \
  && echo "source ${LOCAL_ASCEND}/mindie/set_env.sh" >> /root/.bashrc \
  && echo "export MINDIE_LLM_FRAMEWORK_BACKEND=MS" >> /root/.bashrc \
  && echo "echo ''" >> /root/.bashrc \
  && echo "echo '   _____  .__            .______________                                       '" >> /root/.bashrc \
  && echo "echo '  /     \ |__| ____    __| _/\_   _____/__________  _____   ___________  ______'" >> /root/.bashrc \
  && echo "echo ' /  \ /  \|  |/    \  / __ |  |    __)/  _ \_  __ \/     \_/ __ \_  __ \/  ___/'" >> /root/.bashrc \
  && echo "echo '/    Y    \  |   |  \/ /_/ |  |     \(  <_> )  | \/  Y Y  \  ___/|  | \/\___ \ '" >> /root/.bashrc \
  && echo "echo ' \____|__  /__|___|  /\____ |  \___  / \____/|__|  |__|_|  /\___  >__|  /____  >'" >> /root/.bashrc \
  && echo "echo '        \/        \/      \/      \/                    \/     \/           \/ '" >> /root/.bashrc \
  && echo "echo ''" >> /root/.bashrc


# 设置字符编码环境变量
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8

ENV PYTHONIOENCODING=utf-8
RUN git config --global http.sslVerify false
ENV TMOUT=0

RUN sed -i 's/export TMOUT=300/# export TMOUT=300/' /etc/bashrc